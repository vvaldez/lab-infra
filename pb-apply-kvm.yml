---
- hosts: localhost
  connection: local
  gather_facts: no
  vars:
    full_env: "{{ datacenter }}-{{ named_env }}"
    pb_disable_prompt: "{{ disable_prompt | default('no') }}"
  vars_prompt:
    - name: prompt_env
      prompt: Confirm the environment to target
      private: no
  tasks:
    - assert:
        that:
          - prompt_env.strip() == full_env
        fail_msg: "Incorrect environment entered. {{ prompt_env }} is not \
          {{ full_env }}"
        success_msg: "Targeting {{ prompt_env.strip() }} environment"
      when: not pb_disable_prompt | bool

  tags:
    - always



- hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - assert:
        that:
          - kvm is defined
        fail_msg: "Variable `kvm` must be defined."

    - assert:
        that:
          - kvm.hostname is defined
        fail_msg: "Variable `kvm.hostname` must be defined."



- hosts: kvm
  tasks:
    - vars:
        subscription: "{{ kvm.subscription }}"
      import_role:
        name: subscription
      tags:
        - subscription
      when: "kvm is defined and 'subscription' in kvm"

    - vars:
        base: "{{ kvm }}"
        # The network-scripts portion of the role is considered a provisioning
        # step. By default, it is not ran unless this is override to yes. When
        # re-running this role, it is probably not ideal to re-setup and restart
        # networking. Which will happen when nic_config=yes.
        base_setup_nics: "{{ setup_nics | default('no') }}"
      import_role:
        name: base
      tags:
        - base

    - import_role:
        name: kvm
      tags:
        - kvm

    - name: yum update
      yum:
        name: '*'
        state: latest



- hosts: kvm
  tasks:
    - include_role:
        name: libvirt
      with_items: "{{ kvm.libvirt.domains }}"
      loop_control:
        loop_var: domain
      when: "kvm is defined and 'libvirt' in kvm"

  tags:
    - libvirt
