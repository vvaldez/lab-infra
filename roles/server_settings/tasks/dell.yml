---
- name: Purge iDRAC jobs
  dellemc.openmanage.idrac_lifecycle_controller_jobs:
    idrac_ip: "{{ oob.ipaddr }}"
    idrac_user: "{{ oob_username }}"
    idrac_password: "{{ oob_password }}"

- name: Set BIOS attributes
  community.general.redfish_config:
    category: Systems
    command: SetBiosAttributes
    bios_attributes: "{{ oob.config.bios }}"
    baseuri: "{{ oob.ipaddr }}"
    username: "{{ oob_username }}"
    password: "{{ oob_password }}"
  register: ss_bios_set
  notify:
    - restart server

- name: Create BIOS config job
  community.general.idrac_redfish_command:
    category: Systems
    command: CreateBiosConfigJob
    baseuri: "{{ oob.ipaddr }}"
    username: "{{ oob_username }}"
    password: "{{ oob_password }}"
  when: ss_bios_set.changed

- name: Set iDRAC configuration items
  community.general.idrac_redfish_config:
    baseuri: "{{ oob.ipaddr }}"
    username: "{{ oob_username }}"
    password: "{{ oob_password }}"
    category: Manager
    command: SetSystemAttributes
    resource_id: "{{ oob.resource_ids.manager }}"
    manager_attributes: "{{ oob.config.idrac }}"

- meta: flush_handlers

- include_tasks: wait_latest_job.yml

- name: Discover NICs
  include_tasks: discover_nic.yml

- name: Generate Server Configuration Profile
  template:
    src: scp.json.j2
    dest: "{{ role_path }}/scp_{{ inventory_hostname }}.json"
  delegate_to: localhost
  changed_when: False

- debug:
    msg: "{{ lookup('file', scp_loc) }}"
    verbosity: 1
  vars:
    scp_loc: "{{ role_path }}/scp_{{ inventory_hostname }}.json"

- name: Set attributes via Server Configuration Profile
  dellemc.openmanage.idrac_server_config_profile:
    idrac_ip: "{{ oob.ipaddr }}"
    idrac_user: "{{ oob_username }}"
    idrac_password: "{{ oob_password }}"
    command: import
    share_name: "{{ role_path }}"
    scp_file: scp_{{ inventory_hostname }}.json
    scp_components: ALL
    job_wait: True

- name: Remove temporary file
  file:
    path: "{{ role_path }}/scp_{{ inventory_hostname }}.json"
    state: absent
  delegate_to: localhost
  changed_when: False

- include_tasks: wait_latest_job.yml
...
