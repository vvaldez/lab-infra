---
- debug:
    var: "{{ item }}"
    verbosity: 1
  loop:
    - install
    - iso_hostname

- name: Check to see if source ISO is present
  stat:
    path: "{{ install.iso.source['rhel' + hostvars[iso_hostname].os.version.major] }}"
    get_checksum: no
  register: iso_path

- name: Fail if ISO is not present
  fail:
    msg: "FATAL ERROR! {{ install.iso.source['rhel' + hostvars[iso_hostname].os.version.major] }} does not exist!"
  when: iso_path.stat.exists == false

- name: Obtain disk label from ISO
  command: isoinfo -d -i {{ install.iso.source['rhel' + hostvars[iso_hostname].os.version.major] }}
  changed_when: False
  register: isoinfo

- debug:
    var: isoinfo
    verbosity: 1

- set_fact:
    iso_volume_id: ''
    iso_volume_id_bootloader_safe: ''

- set_fact:
    iso_volume_id: '{{ item.split("Volume id: ")[-1] }}'
  loop: "{{ isoinfo.stdout_lines }}"
  when: item is match('Volume id:')

# Converting any spaces to '\x20' per https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/anaconda_customization_guide/sect-iso-images#sect-images-repack
- set_fact:
    iso_volume_id_bootloader_safe: '{{ iso_volume_id | urlencode() | replace("%","%\x") | replace("%","") }}'

- debug:
    var: iso_volume_id
    verbosity: 1

- fail:
    msg: "ISO Volume label ID is not set"
  when: iso_volume_id | length == 0

- name: Create temporary mount point
  tempfile:
    state: directory
    suffix: ansible_temp
  register: iso_tempdir

- debug:
    var: iso_tempdir
    verbosity: 1

- name: Check if previous build directory exists
  stat:
    path: "{{ install.iso.dir }}/{{ iso_hostname }}/build/"
  register: build_path

- name: Remove any previous build directory
  file:
    state: absent
    path: "{{ install.iso.dir }}/{{ iso_hostname }}/build/"
  when: build_path.stat.exists

- name: Create directory for custom ISO build for {{ iso_hostname }}
  file:
    path: "{{ install.iso.dir }}/{{ iso_hostname }}/build/"
    state: directory

- name: Mount ISO
  mount:
    path: "{{ iso_tempdir.path }}"
    src: "{{ install.iso.source['rhel' + hostvars[iso_hostname].os.version.major] }}"
    state: mounted
    fstype: iso9660
    opts: ro

- name: Copy ISO contents
  copy:
    src: "{{ iso_tempdir.path }}/"
    dest: "{{ install.iso.dir }}/{{ iso_hostname }}/build/"
    remote_src: yes

- debug:
    msg: "{{ hostvars[iso_hostname] }}"

- name: Modify legacy BIOS menu
  template:
    src: "{{ 'rhel' + hostvars[iso_hostname].os.version.major }}/isolinux.cfg.j2"
    dest: "{{ install.iso.dir }}/{{ iso_hostname }}/build/isolinux/isolinux.cfg"

- name: Modify EFI menu
  template:
    src: "{{ 'rhel' + hostvars[iso_hostname].os.version.major }}/grub.cfg.j2"
    dest: "{{ install.iso.dir }}/{{ iso_hostname }}/build/EFI/BOOT/grub.cfg"

- block:
    - name: Create custom ISO for RHEL 8
      command: >
        genisoimage
          -o {{ install.iso.dir }}{{ iso_hostname }}/rhel{{ hostvars[iso_hostname].os.version.major }}.iso
          -J
          -full-iso9660-filenames
          -rock
          -graft-points
          -V "{{ iso_volume_id }}"
          -eltorito-boot isolinux/isolinux.bin
          -eltorito-catalog isolinux/boot.cat -no-emul-boot
          -boot-load-size 4
          -boot-info-table
          -eltorito-alt-boot
          -efi-boot images/efiboot.img -no-emul-boot
          "{{ install.iso.dir }}/{{ iso_hostname }}/build/"

    - name: Modify ISO for UEFI
      command: isohybrid --uefi {{ install.iso.dir }}{{ iso_hostname }}/rhel{{ hostvars[iso_hostname].os.version.major }}.iso

  #EndBlock
  when: hostvars[iso_hostname].os.version.major|string is match('8')

- name: Create custom ISO for RHEL 7
  command: >
    genisoimage
      -o {{ install.iso.dir }}{{ iso_hostname }}/rhel{{ hostvars[iso_hostname].os.version.major }}.iso
      -untranslated-filenames
      -rational-rock
      -translation-table
      -J
      -joliet-long
      -V "{{ iso_volume_id }}"
      -volset "{{ iso_volume_id }}"
      -appid "{{ iso_volume_id }}"
      -eltorito-boot isolinux/isolinux.bin
      -eltorito-catalog isolinux/boot.cat -no-emul-boot
      -boot-load-size 4
      -boot-info-table
      -eltorito-alt-boot
      -efi-boot images/efiboot.img -no-emul-boot
      "{{ install.iso.dir }}/{{ iso_hostname }}/build/"
  tags: build
  when: hostvars[iso_hostname].os.version.major|string is match('7')

- name: Unount ISO
  mount:
    path: "{{ iso_tempdir.path }}"
    src: "{{ install.iso.source['rhel' + hostvars[iso_hostname].os.version.major] }}"
    state: unmounted

- name: Remove temporary mount point
  file:
    path: "{{ iso_tempdir.path }}"
    state: absent

- name: Remove build directory for custom ISO for {{ iso_hostname }}
  file:
    path: "{{ install.iso.dir }}/{{ iso_hostname }}/build/"
    state: absent
  when: ansible_verbosity < 2

- debug:
    msg:
      - "Custom ISO created: {{ install.iso.dir }}{{ iso_hostname }}/rhel{{ hostvars[iso_hostname].os.version.major }}.iso"
      - "Custom ISO available: {{ install.iso.url }}{{ iso_hostname }}/rhel{{ hostvars[iso_hostname].os.version.major }}.iso"

...
