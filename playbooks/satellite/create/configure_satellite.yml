- hosts: satellite
  gather_facts: yes
  tasks:
    - name: Import manifest
      theforeman.foreman.katello_manifest:
        username: "{{ satellite.admin_username }}"
        password: "{{ satellite.admin_password }}"
        server_url: "{{ satellite.server_url }}"
        validate_certs: no
        organization: "{{ satellite.organization }}"
        manifest_path: "../files/{{ satellite.manifest_filename }}"
        state: refreshed
      delegate_to: localhost
      tags:
        - manifest

    - name: Create product for OpenStack containers
      theforeman.foreman.katello_product:
        username: "{{ satellite.admin_username }}"
        password: "{{ satellite.admin_password }}"
        server_url: "{{ satellite.server_url }}"
        validate_certs: no
        organization: "{{ satellite.organization }}"
        name: osp16_containers
        state: present
      delegate_to: localhost
      tags:
        - products

    - name: Create repositories for container images
      theforeman.foreman.katello_repository:
        username: "{{ satellite.admin_username }}"
        password: "{{ satellite.admin_password }}"
        server_url: "{{ satellite.server_url }}"
        validate_certs: no
        organization: "{{ satellite.organization }}"
        name: "{{ item.split('/') | last | replace('openstack-', '') }}"
        product: osp16_containers
        content_type: docker
        url: "{{ satellite.containers.url }}"
        docker_upstream_name: "{{ item }}"
        upstream_username: "{{ satellite.containers.upstream_username }}"
        upstream_password: "{{ satellite.containers.upstream_password }}"
        state: present_with_defaults
      loop: "{{ satellite.containers.images }}"
      delegate_to: localhost
      tags:
        - containers

    - name: "Create repository sets with releasevers"
      theforeman.foreman.katello_repository_set:
        username: "{{ satellite.admin_username }}"
        password: "{{ satellite.admin_password }}"
        server_url: "{{ satellite.server_url }}"
        validate_certs: no
        organization: "{{ satellite.organization }}"
        name: "{{ item.name }}"
        repositories:
        - releasever: "{{ item.releasever }}"
      loop: "{{ satellite.repository_sets }}"
      when: '"releasever" in item'
      delegate_to: localhost
      tags:
        - repository-sets

    - name: "Create repository sets without releasevers"
      theforeman.foreman.katello_repository_set:
        username: "{{ satellite.admin_username }}"
        password: "{{ satellite.admin_password }}"
        server_url: "{{ satellite.server_url }}"
        validate_certs: no
        organization: "{{ satellite.organization }}"
        name: "{{ item.name }}"
        all_repositories: yes
      loop: "{{ satellite.repository_sets }}"
      when: '"releasever" not in item'
      delegate_to: localhost
      tags:
        - repository-sets

    - name: Get all products
      theforeman.foreman.foreman_search_facts:
        username: "{{ satellite.admin_username }}"
        password: "{{ satellite.admin_password }}"
        server_url: "{{ satellite.server_url }}"
        validate_certs: no
        resource: products
        organization: "{{ satellite.organization }}"
      register: products
      delegate_to: localhost
      tags:
        - sync-plan

    - name: "Create or update weekly RHEL sync plan for all products containing a repository"
      theforeman.foreman.katello_sync_plan:
        username: "{{ satellite.admin_username }}"
        password: "{{ satellite.admin_password }}"
        server_url: "{{ satellite.server_url }}"
        validate_certs: no
        organization: "{{ satellite.organization }}"
        name: Nightly
        description: Nightly
        interval: daily
        enabled: true
        sync_date: "{{ ansible_date_time.date }} 23:00:00"
        products: "{{ item.name }}"
        state: present
      loop: "{{ products.resources }}"
      when: item.repository_count > 0
      delegate_to: localhost
      tags:
        - sync-plan

    - name: Get all repositories
      theforeman.foreman.foreman_search_facts:
        username: "{{ satellite.admin_username }}"
        password: "{{ satellite.admin_password }}"
        server_url: "{{ satellite.server_url }}"
        validate_certs: no
        resource: repositories
      register: repositories
      delegate_to: localhost
      tags:
        - sync

    - name: Kick off repository Sync tasks
      theforeman.foreman.katello_sync:
        username: "{{ satellite.admin_username }}"
        password: "{{ satellite.admin_password }}"
        server_url: "{{ satellite.server_url }}"
        validate_certs: no
        verify_ssl: no
        organization: "{{ satellite.organization }}"
        product: "{{ item.product.name }}"
        repository:  "{{ item.name }}"
      loop: "{{ repositories.resources }}"
      when: item.url  # Not all repositories have a URL
      async: 999999
      poll: 0
      register: repo_sync_sleeper
      delegate_to: localhost
      tags:
        - sync

    - name: Wait until all Syncs have finished
      async_status:
        jid: "{{ repo_sync_sleeper_item.ansible_job_id }}"
      loop: "{{ repo_sync_sleeper.results }}"
      loop_control:
        loop_var: repo_sync_sleeper_item
      when: repo_sync_sleeper_item.ansible_job_id is defined  # Skip items that were skipped in the previous task
      register: async_job_result
      until: async_job_result.finished
      retries: 999
      delay: 10
      delegate_to: localhost
      tags:
        - sync
