- hosts: satellite
  gather_facts: yes
  tasks:
    - name: Import manifest
      theforeman.foreman.katello_manifest:
        username: "{{ satellite.admin_username }}"
        password: "{{ satellite.admin_password }}"
        server_url: "https://{{ satellite.ipaddr }}/"
        validate_certs: no
        organization: "{{ satellite.organization }}"
        manifest_path: "../files/{{ satellite.manifest_filename }}"
        state: refreshed
      delegate_to: localhost
      tags:
        - manifest

    - name: Create product for OpenStack containers
      theforeman.foreman.katello_product:
        username: "{{ satellite.admin_username }}"
        password: "{{ satellite.admin_password }}"
        server_url: "https://{{ satellite.ipaddr }}/"
        validate_certs: no
        organization: "{{ satellite.organization }}"
        name: osp16_containers
        state: present
      delegate_to: localhost
      tags:
        - products

    - name: Create repositories for container images
      theforeman.foreman.katello_repository:
        username: "{{ satellite.admin_username }}"
        password: "{{ satellite.admin_password }}"
        server_url: "https://{{ satellite.ipaddr }}/"
        validate_certs: no
        organization: "{{ satellite.organization }}"
        name: "{{ item.split('/') | last | replace('openstack-', '') }}"
        product: osp16_containers
        content_type: docker
        url: "{{ satellite.containers.url }}"
        docker_upstream_name: "{{ item }}"
        upstream_username: "{{ satellite.containers.upstream_username }}"
        upstream_password: "{{ satellite.containers.upstream_password }}"
        state: present
      loop: "{{ satellite.containers.images }}"
      delegate_to: localhost
      tags:
        - containers

    - name: "Create repository sets with releasevers"
      theforeman.foreman.katello_repository_set:
        username: "{{ satellite.admin_username }}"
        password: "{{ satellite.admin_password }}"
        server_url: "https://{{ satellite.ipaddr }}/"
        validate_certs: no
        organization: "{{ satellite.organization }}"
        name: "{{ item.name }}"
        repositories:
        - releasever: "{{ item.releasever }}"
      loop: "{{ satellite.repository_sets }}"
      when: item.releasever
      delegate_to: localhost
      tags:
        - repository-sets

    - name: "Create repository sets without releasevers"
      theforeman.foreman.katello_repository_set:
        username: "{{ satellite.admin_username }}"
        password: "{{ satellite.admin_password }}"
        server_url: "https://{{ satellite.ipaddr }}/"
        validate_certs: no
        organization: "{{ satellite.organization }}"
        name: "{{ item.name }}"
        all_repositories: yes
      loop: "{{ satellite.repository_sets }}"
      when: not item.releasever
      delegate_to: localhost
      tags:
        - repository-sets

    - name: "Create or update weekly RHEL sync plan"
      theforeman.foreman.katello_sync_plan:
        username: "{{ satellite.admin_username }}"
        password: "{{ satellite.admin_password }}"
        server_url: "https://{{ satellite.ipaddr }}/"
        validate_certs: no
        organization: "{{ satellite.organization }}"
        name: Nightly
        description: Nightly
        interval: daily
        enabled: true
        sync_date: "{{ ansible_date_time.date }} 23:00:00"
        products: "{{ satellite.sync_plan.products }}"
        state: present
      delegate_to: localhost
      tags:
        - sync-plan

    # Sync all repositories
    - name: Get all repositories
      theforeman.foreman.foreman_search_facts:
        username: "{{ satellite.admin_username }}"
        password: "{{ satellite.admin_password }}"
        server_url: "https://{{ satellite.ipaddr }}/"
        validate_certs: no
        resource: repositories
      register: repositories
      delegate_to: localhost
      tags:
        - sync

    - name: Kick off repository Sync tasks
      theforeman.foreman.katello_sync:
        username: "{{ satellite.admin_username }}"
        password: "{{ satellite.admin_password }}"
        server_url: "https://{{ satellite.ipaddr }}/"
        validate_certs: no
        organization: "{{ satellite.organization }}"
        product: "{{ item.product.name }}"
      loop: "{{ repositories.resources }}"
      when: item.url  # Not all repositories have a URL
      delegate_to: localhost
      tags:
        - sync
