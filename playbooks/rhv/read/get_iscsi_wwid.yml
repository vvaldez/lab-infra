---
- name: Retrieve WWID for given iSCSI LUN
  hosts: "{{ groups['iscsi_client'].0 }}"
  gather_facts: False
  become: True
  vars:
    ceph_admin_node: "{{ groups['ceph'].0 }}"
    iscsi_portal: "{{ hostvars[ceph_admin_node].ceph.iscsi_targets.gateways.0.ipaddr }}"
    iscsi_target: "{{ hostvars[ceph_admin_node].ceph.iscsi_targets.targets.0.name }}"
    iscsi_discovery_username: "{{ ceph_discovery_username }}"
    iscsi_discovery_password: "{{ ceph_discovery_password }}"
    iscsi_chap_username: "{{ ceph_chap_username }}"
    iscsi_chap_password: "{{ ceph_chap_password }}"
    iscsi_size: "{{ hostvars[ceph_admin_node].ceph.iscsi_targets.images.1.size }}"
  tasks:
    - debug:
        var: "{{ item }}"
        verbosity: 1
      loop:
        - iscsi_portal
        - iscsi_target
        - iscsi_discovery_username
        - iscsi_chap_username
        - iscsi_size

    - name: Ensure required packages are installed
      yum:
        name:
          - iscsi-initiator-utils
          - sg3_utils
        state: installed

    - name: Determine existing block devices
      command: lsblk --noheadings --nodeps --output NAME,SIZE
      register: lsblk_output

    - debug:
        var: lsblk_output
        verbosity: 1

    - set_fact:
        scsi_devices_prelogin: {}

    - set_fact:
        scsi_devices_prelogin: "{{ scsi_devices_prelogin | combine( { item.split().0 : item.split().1 } ) }}"
      loop: "{{ lsblk_output.stdout_lines }}"
      when: item is search(iscsi_size)

    - debug:
        var: scsi_devices_prelogin
        verbosity: 1

    - name: Attempt to discover iSCSI targets on given portal
      open_iscsi:
        auto_node_startup: no
        show_nodes: yes
        discover: yes
        node_user: "{{ iscsi_discovery_username }}"
        node_pass: "{{ iscsi_discovery_password }}"
        portal: "{{ iscsi_portal }}"
        login: no
      register: iscsi_targets
      ignore_errors: yes
      # Does not work as the module does not pass authentication on discovery, but it needs to create the portal directory first

    - debug:
        var: iscsi_targets
        verbosity: 1

    - name: Update iSCSI discovery authentication for given portal
      command: >
        iscsiadm
          --mode discoverydb
          {% if ansible_verbosity == 3 %}--debug=8{% endif %}
          {% if ansible_verbosity == 2 %}--debug=4{% endif %}
          {% if ansible_verbosity == 1 %}--debug=1{% endif %}
          {% if ansible_verbosity == 0 %}--debug=0{% endif %}
          --type sendtargets
          --portal {{ iscsi_portal }}
          --op=update
          --name=discovery.sendtargets.auth.authmethod --value=CHAP
          --name=discovery.sendtargets.auth.username --value={{ iscsi_discovery_username }}
          --name=discovery.sendtargets.auth.password --value={{ iscsi_discovery_password }}

    # Same command with added --discover will use updated record
    - name: Discover iSCSI targets on given portal
      command: >
        iscsiadm
          --mode discoverydb
          {% if ansible_verbosity == 3 %}--debug=8{% endif %}
          {% if ansible_verbosity == 2 %}--debug=4{% endif %}
          {% if ansible_verbosity == 1 %}--debug=1{% endif %}
          {% if ansible_verbosity == 0 %}--debug=0{% endif %}
          --type sendtargets
          --portal {{ iscsi_portal }}
          --op=update
          --name=discovery.sendtargets.auth.authmethod --value=CHAP
          --name=discovery.sendtargets.auth.username --value={{ iscsi_discovery_username }}
          --name=discovery.sendtargets.auth.password --value={{ iscsi_discovery_password }}
          --discover
      register: iscsi_targets

    - debug:
        var: iscsi_targets
        verbosity: 1

    - assert:
        that: iscsi_target in iscsi_targets.stdout
        fail_msg: "ERROR: Specified iSCSI target: '{{ iscsi_target }}' not found in the list of discovered targets: '{{ iscsi_targets.stdout }}'"
        success_msg: "Specified iSCSI target: '{{ iscsi_target }}' found in the list of discovered targets"

    - name: Login to iSCSI target
      open_iscsi:
        auto_node_startup: no
        show_nodes: yes
        discover: no
        node_user: "{{ iscsi_chap_username }}"
        node_pass: "{{ iscsi_chap_password }}"
        portal: "{{ iscsi_portal }}"
        target: "{{ iscsi_target }}"
        login: yes
      register: iscsi_target_login

    - debug:
        var: iscsi_target_login
        verbosity: 1

    - name: Determine any added block devices
      command: lsblk --noheadings --nodeps --output NAME,SIZE
      register: lsblk_output

    - set_fact:
        scsi_devices_postlogin: {}

    - set_fact:
        scsi_devices_postlogin: "{{ scsi_devices_postlogin | default({}) | combine( { item.split().0 : item.split().1 } ) }}"
      loop: "{{ lsblk_output.stdout_lines }}"
      when: item is search(iscsi_size)

    - debug:
        var: scsi_devices_prelogin
        verbosity: 1

    - debug:
        var: scsi_devices_postlogin
        verbosity: 1

    - set_fact:
        iscsi_device_list: "{{ scsi_devices_postlogin | default({}) | difference(scsi_devices_prelogin) }}"

    - fail:
        msg: "ERROR: Expected exactly 1 new iSCSI LUN with size {{ iscsi_size }} but found: {{ iscsi_device_list }}"
      when: iscsi_device_list | length > 1

    - fail:
        msg: "ERROR: Expected exactly 1 new iSCSI LUN with size {{ iscsi_size }} but found none."
      when: iscsi_device_list | length == 0

    - set_fact:
        iscsi_device: "{{ iscsi_device_list.0 }}"

    - name: Gather WWID from {{ iscsi_device }}
      command: /lib/udev/scsi_id --page=0x83 --whitelisted --device=/dev/{{ iscsi_device }}
      register: iscsi_wwid

    - name: Logout of iscsi target
      command: >
        iscsiadm --mode node
          {% if ansible_verbosity == 3 %}--debug=8{% endif %}
          {% if ansible_verbosity == 2 %}--debug=4{% endif %}
          {% if ansible_verbosity == 1 %}--debug=1{% endif %}
          {% if ansible_verbosity == 0 %}--debug=0{% endif %}
          --logoutall=all

    - debug:
        msg:
          - "INFO: iSCSI LUN gathered facts"
          - "  Target: {{ iscsi_target }}"
          - "  Portal: {{ iscsi_portal }}"
          - "  Size: {{ iscsi_size }}"
          - "  OS Device: {{ iscsi_device }}"
          - "  OS WWID: {{ iscsi_wwid.stdout }}"
...
