[DEFAULT]
image_path = /home/stack/images
local_ip = {{ undercloud.local_ip }}
undercloud_public_host = {{ undercloud.undercloud_public_host }}
undercloud_admin_host = {{ undercloud.undercloud_admin_host }}
undercloud_hostname = {{ undercloud.hostname }}
overcloud_domain_name = {{ undercloud.overcloud_domain_name }}
generate_service_certificate = false
certificate_generation_ca = local
local_interface = {{ undercloud.local_interface }}
# couldn't get virtual controllers to clean with mtu 9000
local_mtu = 1500
undercloud_nameservers = {{ undercloud.undercloud_nameservers | join(',') }}
undercloud_ntp_servers = {{ undercloud.undercloud_ntp_servers | join(',') }}
enable_validations = true
clean_nodes = true
enabled_hardware_types = ipmi,redfish,ilo,idrac,staging-ovirt
container_images_file = /home/stack/ansible-generated/templates/containers-prepare-parameter.yaml
enable_routed_networks = true
subnets = ctlplane-subnet,{{ sites[1:] | join (',', attribute='name_lower') }}
local_subnet = ctlplane-subnet
enable_tempest = true

[ctlplane-subnet]
cidr = {{ sites[0].networks.provisioning.ip_subnet }}
dhcp_start = {{ sites[0].networks.provisioning.dhcp_start }}
dhcp_end = {{ sites[0].networks.provisioning.dhcp_end }}
inspection_iprange = {{ sites[0].networks.provisioning.inspection_iprange }}
gateway = {{ sites[0].networks.provisioning.gateway_ip }}
masquerade = {{ sites[0].networks.provisioning.masquerade }}

{% for site in sites[1:] %}
[{{ site.name_lower }}]
cidr = {{ site.networks.provisioning.ip_subnet }}
dhcp_start = {{ site.networks.provisioning.dhcp_start }}
dhcp_end = {{ site.networks.provisioning.dhcp_end }}
inspection_iprange = {{ site.networks.provisioning.inspection_iprange }}
gateway = {{ site.networks.provisioning.gateway_ip }}
masquerade = {{ site.networks.provisioning.masquerade }}

{% endfor %}
