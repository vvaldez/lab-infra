---
- hosts: director
  remote_user: root
  name: Install undercloud and introspect Overcloud nodes
  tasks:
    - name: Remove cloud-init
      dnf:
        name: cloud-init
        state: removed

    - name: Remove bad DNS entry
      lineinfile:
        path: /etc/resolv.conf
        regexp: '^nameserver 192.168.122.1'
        state: absent

    # The following steps are taken from https://access.redhat.com/documentation/en-us/red_hat_openstack_platform/13/html-single/director_installation_and_usage/
    - name: 3.1. Preparing the undercloud
      become: yes
      become_user: root
      block:
        - name: 3.1. Create the stack user
          user:
            name: stack
            password: "{{ undercloud.stack_user_password }}"
            state: present

        - name: 3.1. Disable password requirements when using sudo
          copy:
            dest: /etc/sudoers.d/stack
            content: "stack ALL=(root) NOPASSWD:ALL\n"
            owner: root
            group: root
            mode: 0440

        - name: 3.1. Create directories for system images and heat templates
          become_user: stack
          file:
            path: "{{ item }}"
            state: directory
            mode: 0755
          with_items:
            - ~/images
            - ~/templates

        - name: 3.1. Setting the undercloud hostname
          hostname:
            name: "{{ undercloud.hostname }}"
          register: hostname_output

        - name: 3.1. Ensuring /etc/hosts entry
          vars:
            ip: "{{ undercloud.local_ip | ipaddr('address') }}"
          lineinfile:
            path: /etc/hosts
            regexp: "^{{ ip }}"
            line: "{{ ip }}  {{ hostname_output.ansible_facts.ansible_fqdn }} {{ hostname_output.ansible_facts.ansible_hostname }}"

        - name: 3.1. Install katello package
          yum:
            name: "https://{{ undercloud.rhsm_server_hostname }}/pub/katello-ca-consumer-latest.noarch.rpm"
            state: installed
            validate_certs: no
          tags:
            - rhsm

        - name: 3.1. Register to Satellite
          vars:
            rhsm_org_id: "{{ undercloud.rhsm_org_id }}"
            rhsm_activationkey: "{{ undercloud.rhsm_activationkey }}"
            rhsm_server_hostname: "{{ undercloud.rhsm_server_hostname }}"
            rhsm_repositories: "{{ undercloud.rhsm_repositories }}"
          import_role:
            name: oasis_roles.system.rhsm
          tags:
            - rhsm

        - name: "3.1. Lock the undercloud to Red Hat Enterprise Linux {{ undercloud.rhsm_lock_release }}"
          shell: "subscription-manager release --set={{ undercloud.rhsm_lock_release }}"

        - name: 3.1. Find out if python-tripleoclient installed
          shell: "rpm -q python3-tripleoclient"
          args:
            warn: false
          register: rpm_query
          changed_when: false
          failed_when: false

        # yum update is only ran during the initial install
        # IF python-tripleoclient is not installed: yum update
        # ELSE: skip these steps
        - name: 3.1. yum update
          yum:
            name: '*'
            state: latest
          register: yum_update
          when: rpm_query.rc == 1

        - name: 3.1. Reboot
          reboot:
          when: yum_update.changed

        - name: 3.1 Install python3-tripleoclient
          yum:
            name: python3-tripleoclient
            state: present
      tags:
        - '3.1'



    - name: 3.3 Installing ceph-ansible
      block:
        # This is required if using ceph-ansible. Do not use the package that comes
        # from  @rhel-7-server-openstack-13-rpms.
        - name: 3.3. Enable the Ceph Tools repository
          rhsm_repository:
            name:
              - rhceph-4-tools-for-rhel-8-x86_64-rpms
            state: enabled
          when: undercloud.install_ceph_ansible | bool

        - name: 3.3. Install ceph-ansible
          yum:
            name: ceph-ansible
            state: present
          when: undercloud.install_ceph_ansible | bool

      tags:
        - '3.3'

    - name: Install integration test suite packages
      yum:
        name: "{{ packages }}"
        state: installed
      vars:
        packages:
          - openstack-tempest
          - python3-cinder-tests-tempest
          - python3-heat-tests-tempest
          - python3-horizon-tests-tempest
          - python3-keystone-tests-tempest
          - python3-networking-l2gw-tests-tempest
          - python3-neutron-tests-tempest
          - python3-novajoin-tests-tempest
          - python3-octavia-tests-tempest
          - python3-telemetry-tests-tempest
      tags:
        - tempest

    - name: Disable appstream for container-tools:rhel8
      dnf:
        name: 'container-tools:rhel8'
        state: disabled

    - name: Enable appstream for container-tools:2.0
      dnf:
        name: 'container-tools:2.0'
        state: enabled

    - name: Add useful aliases for OpenStack
      become: yes
      become_user: stack
      lineinfile:
        path: ~/.bashrc
        regexp: "^{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
          - { regexp: '^alias os=',  line: 'alias os="openstack"' }



    - name: 4.1. Configuring director
      block:
        - name: 4.1. Ensure ansible-generated dir exists
          file:
            path: '/home/stack/ansible-generated/'
            state: directory
            owner: stack
            group: stack
            mode: '0755'

        - name: 4.1. Create stack home directory structure
          file:
            path: "/home/stack/ansible-generated/{{ item.path }}"
            state: directory
            owner: stack
            group: stack
          with_filetree: "{{ inventory_dir }}/../ansible-generated"
          when: item.state == 'directory'

        - name: 4.1. Template ansible-generated/ deployment files to Director
          template:
            src: "{{ item.src }}"
            dest: "/home/stack/ansible-generated/{{ item.path }}"
            owner: stack
            group: stack
            mode: preserve
          with_filetree: "{{ inventory_dir }}/../ansible-generated"
          when: item.state == 'file'

      tags:
        - '4.1'
        - templates



    - name: 4.7. Installing director
      become: yes
      become_user: stack
      block:
        - name: 4.7. Copy undercloud.conf to /home/stack
          copy:
            src: /home/stack/ansible-generated/undercloud.conf
            dest: /home/stack/undercloud.conf
            mode: preserve
            remote_src: yes

        - name: 4.7. openstack undercloud install
          import_role:
            name: tripleo.operator.tripleo_undercloud_install
          vars:
            tripleo_undercloud_install_home_dir: /home/stack
            tripleo_undercloud_install_log_output: false
            tripleo_undercloud_install_debug: true
            tripleo_rc_file: /home/stack/stackrc

        - debug:
            var: tripleo_undercloud_install_result

      tags:
        - '4.7'
        - install



    - name: 4.8.1 Obtaining images for overcloud nodes
      become: yes
      become_user: stack
      block:
        - name: 4.8.1. Install rhosp-director-image packages
          become: yes
          become_user: root
          yum:
            name: "{{ packages }}"
            state: latest
          vars:
            packages:
              - rhosp-director-images
              - rhosp-director-images-ipa

        - name: 4.8.1 Untar overcloud-full-latest
          unarchive:
            src: /usr/share/rhosp-director-images/overcloud-full-latest.tar
            remote_src: yes
            dest: ~/images

        - name: 4.8.1 Untar ironic-python-agent-latest
          unarchive:
            src: /usr/share/rhosp-director-images/ironic-python-agent-latest.tar
            remote_src: yes
            dest: ~/images

        - name: Install libguestfs-tools for virt-customize
          yum:
            name: libguestfs-tools
            state: present
          become: yes
          become_user: root

        # https://bugzilla.redhat.com/show_bug.cgi?id=1764187
        - name: Disable iscsid that is installed as a dependency to the libguestfs-tools package
          systemd:
            name: "{{ item }}"
            state: stopped
            enabled: no
          loop:
            - iscsid.socket
            - iscsid
          become: yes
          become_user: root

        - name: 4.8.1 Set root password for Overcloud image
          shell: "virt-customize -a ~/images/overcloud-full.qcow2 --root-password password:{{ undercloud.overcloud_full_image_root_password }}"

        - name: 4.8.1 Upload images to Glance
          import_role:
            name: tripleo.operator.tripleo_overcloud_image_upload
          vars:
            tripleo_overcloud_image_upload_debug: true
            tripleo_overcloud_image_upload_home_dir: /home/stack
            tripleo_overcloud_image_upload_image_path: /home/stack/images/
            tripleo_overcloud_image_upload_log_output: false
            tripleo_overcloud_image_upload_update_existing: true
            tripleo_rc_file: /home/stack/stackrc

      tags:
        - '4.8.1'



    - name: 4.9. Setting a nameserver for the control plane
      become: yes
      become_user: stack
      block:
        - name: 4.9. Setting a nameserver for the control plane
          shell: "source ~/stackrc; openstack subnet set --no-dns-nameservers --dns-nameserver {{ undercloud.undercloud_nameservers | join(' --dns-nameserver ') }} ctlplane-subnet"
      tags:
        - '4.9'



    - name: 7.1. Registering Nodes for the Overcloud
      become: yes
      become_user: stack
      block:
        # Now we get the roles, names, passwords and IPs from our instackenv.yaml file, but since we didn't specify the mac
        # we don't get the port in neutron that we need for later on
        - name: 7.1. openstack overcloud node import
          import_role:
            name: tripleo.operator.tripleo_overcloud_node_import
          vars:
            tripleo_overcloud_node_import_debug: true
            tripleo_overcloud_node_import_environment_file: /home/stack/ansible-generated/instackenv.yaml
            tripleo_overcloud_node_import_home_dir: /home/stack
            tripleo_overcloud_node_import_log_output: false
            tripleo_rc_file: /home/stack/stackrc

      tags:
        - '7.1'



    - name: Map Neutron ports to baremetal nodes
      become: yes
      become_user: stack
      shell: /home/stack/ansible-generated/scripts/_map_neutron_ports.sh



    - name: 7.3. Inspecting the Hardware of Nodes
      become: yes
      become_user: stack
      block:
        - name: 7.3. Check if any manageable nodes exist before trying to import them
          shell: "source ~/stackrc; openstack baremetal node list --provision-state manageable -f value"
          register: shell_output

        # Now we use the introspection process to get the ports created and get a detailed inventory of the nodes
        - name: 7.3. openstack overcloud node introspect --all-manageable
          import_role:
            name: tripleo.operator.tripleo_overcloud_node_introspect
          vars:
            tripleo_overcloud_node_introspect_all_manageable: true
            tripleo_overcloud_node_introspect_debug: true
            tripleo_overcloud_node_introspect_provide: true
            tripleo_overcloud_node_introspect_rc_file: /home/stack/stackrc
            tripleo_rc_file: /home/stack/stackrc
          when: shell_output.stdout != ''

      tags:
        - '7.3'



    - name: Create roles for Overcloud nodes
      become: yes
      become_user: stack
      shell: /home/stack/ansible-generated/scripts/_create_roles.sh


    - name: Create realtime image
      become: yes
      become_user: stack
      shell: /home/stack/ansible-generated/scripts/3.3-create-upload-rt-image.sh
...
