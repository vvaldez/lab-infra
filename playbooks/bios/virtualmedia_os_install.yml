---
- hosts: all
  connection: local
  name: Insert and Attach VirtualMedia and set OneTimeBoot to Virtual CD
  gather_facts: False
  collections:
    - community.general

  tasks:
  - debug:
      var: oob
      verbosity: 2

  - name: Get VirtualMedia 
    redfish_info:
      category: Manager
      command: GetVirtualMedia
      baseuri: "{{ oob.ipaddr }}"
      username: "{{ oob.username }}"
      password: "{{ oob.password }}"
    register: virtual_media_result

  - debug:
      var: virtual_media_result.redfish_facts
      verbosity: 2
      
  - name: Insert Virtual Media
    redfish_command:
      category: Manager
      command: VirtualMediaInsert
      baseuri: "{{ oob.ipaddr }}"
      username: "{{ oob.username }}"
      password: "{{ oob.password }}"
      virtual_media:
        image_url: "{{ oob.iso_url }}"
        media_types:
          - CD
          - DVD
      resource_id: "{{ oob.resource_ids.manager }}"
    register: virtualmedia_attach_result

  - debug:
      var: virtualmedia_attach_result
      verbosity: 2

  - name: Get VirtualMedia 
    redfish_info:
      category: Manager
      command: GetVirtualMedia
      baseuri: "{{ oob.ipaddr }}"
      username: "{{ oob.username }}"
      password: "{{ oob.password }}"
    register: virtual_media_result

  - debug:
      var: virtual_media_result.redfish_facts
      verbosity: 2
      
  - block:
      # This uses Dell iDRAC extention to set OneTime boot.
      # I tried every possible method to set OneTime boot without idrac_redfish module but with no success as standard redfish can only set 'Cd' device, which on Dell is explicitly different from the 'iDRACVirtual' device
      - name: Set iDRAC OneTime VirtualMedia boot
        idrac_redfish_config:
          category: Manager
          command:
            - SetManagerAttributes
          resource_id: "{{ oob.resource_ids.manager }}"
          manager_attributes:
            VirtualMedia.1.BootOnce: Enabled
          baseuri: "{{ oob.ipaddr }}"
          username: "{{ oob.username }}"
          password: "{{ oob.password }}"
        register: onetimeboot_result

      - debug:
          var: onetimeboot_result
          verbosity: 2

    tags:
      - bootorder
    when:
      - "'Dell' in oob.SystemManufacturer"
      - False
    # Need to add a check to see if this is an iDRAC redfish device
    #EndBlock

  - block:
      - name: Create BIOS configuration job (schedule BIOS setting update)
        idrac_redfish_command:
          category: Systems
          command: CreateBiosConfigJob
          baseuri: "{{ oob.ipaddr }}"
          username: "{{ oob.username }}"
          password: "{{ oob.password }}"
    tags:
      - configjob
    when:
      - "'Dell' in oob.SystemManufacturer"
    #EndBlock

  - block:
      - name: Set OneTime VirtualMedia boot
        redfish_config:
          category: Systems
          command:
            - SetBiosAttributes
          resource_id: "{{ oob.resource_ids.system }}"
          bios_attributes:
            BootSourceOverrideTarget: "{{ oob.virtual_cd_device }}"
          baseuri: "{{ oob.ipaddr }}"
          username: "{{ oob.username }}"
          password: "{{ oob.password }}"
        register: onetimeboot_result

      - debug:
          var: onetimeboot_result
          verbosity: 2

    tags:
      - bootorder
    when: "'Dell' in oob.SystemManufacturer"
    # Need to add a check to see if this is an iDRAC redfish device
    #EndBlock

  - block:
      - name: Set BootOrder
        redfish_config:
          category: Systems
          command:
            - SetBootOrder
          resource_id: "{{ oob.resource_ids.system }}"
          boot_order:
            - "{{ oob.virtual_cd_device }}"
            - HardDisk.List.1-1
          baseuri: "{{ oob.ipaddr }}"
          username: "{{ oob.username }}"
          password: "{{ oob.password }}"

      - debug:
          var: onetimeboot_result
          verbosity: 2

    tags:
      - bootorder
    when: not "'Dell' in oob.SystemManufacturer"
    # Possible fallback if not a Dell
    # This task sets a new permanent boot order, so a callback after install is done needs to set it back
    #EndBlock

  - block:
      - name: Reboot server
        redfish_command:
          category: Systems
          command: 
            - PowerReboot
          resource_id: "{{ oob.resource_ids.system }}"
          baseuri: "{{ oob.ipaddr }}"
          username: "{{ oob.username }}"
          password: "{{ oob.password }}"
        register: reboot_result

      - debug:
          var: reboot_result
          verbosity: 2
    tags:
      - reboot
...