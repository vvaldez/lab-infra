heat_template_version: queens

description: >
  All configurations which require reboot should be initiated via PreNetworkConfig. After
  this configuration is completed, the corresponding node will be rebooted.

parameters:
  server:
    type: string
  RoleParameters:
    type: json
    description: Parameters specific to the role
    default: {}
 
  ServiceNames:
    type: comma_delimited_list
    default: []
  deployment_actions:
    default: ['CREATE']
    type: comma_delimited_list
    description: >
      List of stack actions that will trigger any deployments in this
      templates. The actions will be an empty list of the server is in the
      toplevel DeploymentServerBlacklist parameter's value.
conditions:
  deployment_actions_empty:
    equals:
      - {get_param: deployment_actions}
      - []


resources:
  NestedVirtConfig:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ansible
      outputs:
        - name: result
      config: |
        ---
        - hosts: localhost
          connection: local
          gather_facts: False
          tasks:
            - copy:
                dest: /etc/modprobe.d/kvm_intel.conf
                content: |
                 options kvm_intel nested=1
                 options kvm_intel enable_shadow_vmcs=1
                 options kvm_intel enable_apicv=1
                 options kvm_intel ept=1

  NestedVirtDeployment:
    type: OS::Heat::SoftwareDeployment
    properties:
      name: NestedVirtDeployment
      server:  {get_param: server}
      config: {get_resource: NestedVirtConfig}
      actions:
        if:
          - deployment_actions_empty
          - []
          - ['CREATE'] # Only do this on CREATE

  RebootConfig:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      config: |
        #!/bin/bash
        # Stop os-collect-config to avoid any race collecting another
        # deployment before reboot happens
        # NOTE: /tmp/kernel_args_reboot_required.ansible file is created by boot_params_tasks ansible
        # only when reboot is required. During FFU (newton -> queens), first-boot (used in newton
        # to configure kernel args) is migrated to host-config-and-reboot environment. As FFU is using
        # ansible (config-download), rebooting via bash (below code), will NOT work, but the expectation
        # is that kernel args will not be changed during FFU, with no reboot during FFU.
        if [ -f /tmp/kernel_args_reboot_required.ansible ]; then
          rm /tmp/kernel_args_reboot_required.ansible
          systemctl stop os-collect-config.service
          /sbin/reboot
        fi

  RebootDeployment:
    type: OS::TripleO::Reboot::SoftwareDeployment
    depends_on: [NestedVirtDeployment]
    properties:
      name: RebootDeployment
      server:  {get_param: server}
      config: {get_resource: RebootConfig}
      actions:
        if:
          - deployment_actions_empty
          - []
          - ['CREATE'] # Only do this on CREATE
      signal_transport: NO_SIGNAL

  RebootEnsureConfig:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      config: |
        #!/bin/bash
        echo "Reboot completed"

  RebootEnsureDeployment:
    type: OS::TripleO::Reboot::SoftwareDeployment
    depends_on: RebootDeployment
    properties:
      name: RebootEnsureDeployment
      server:  {get_param: server}
      config: {get_resource: RebootEnsureConfig}
      actions:
        if:
          - deployment_actions_empty
          - []
          - ['CREATE'] # Only do this on CREATE
