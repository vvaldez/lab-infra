heat_template_version: queens

description: >
  External network definition (automatically generated).

parameters:
  # the defaults here work for static IP assignment (IPAM) only
  ExternalNetCidr:
    default: "169.47.15.160/27"
    description: Cidr for the external network.
    type: string
  ExternalNetValueSpecs:
    default: {'provider:physical_network': 'external', 'provider:network_type': 'flat'}
    description: Value specs for the external network.
    type: json
  ExternalNetAdminStateUp:
    default: false
    description: The admin state of the network.
    type: boolean
  ExternalNetShared:
    default: false
    description: Whether this network is shared across all tenants.
    type: boolean
  ExternalNetName:
    default: external
    description: The name of the external network.
    type: string
  ExternalSubnetName:
    default: external_subnet
    description: The name of the external subnet in Neutron.
    type: string
  ExternalAllocationPools:
    default: [{'start': '169.47.15.166', 'end': '169.47.15.190'}]
    description: Ip allocation pool range for the external network.
    type: json
  IPv6AddressMode:
    default: dhcpv6-stateful
    description: Neutron subnet IPv6 address mode
    type: string
  IPv6RAMode:
    default: dhcpv6-stateful
    description: Neutron subnet IPv6 router advertisement mode
    type: string
  ExternalInterfaceDefaultRoute:
    default: "169.47.15.161"
    description: default route for the external network
    type: string
  ExternalNetworkVlanID:
    default: 10
    description: Vlan ID for the external network traffic.
    type: number

resources:
  ExternalNetwork:
    type: OS::Neutron::Net
    properties:
      admin_state_up: {get_param: ExternalNetAdminStateUp}
      name: {get_param: ExternalNetName}
      shared: {get_param: ExternalNetShared}
      value_specs: {get_param: ExternalNetValueSpecs}

  ExternalSubnet:
    type: OS::Neutron::Subnet
    properties:
      ip_version: 6
      ipv6_address_mode: {get_param: IPv6AddressMode}
      ipv6_ra_mode: {get_param: IPv6RAMode}
      cidr: {get_param: ExternalNetCidr}
      name: {get_param: ExternalSubnetName}
      network: {get_resource: ExternalNetwork}
      allocation_pools: {get_param: ExternalAllocationPools}
      gateway_ip: {get_param: ExternalInterfaceDefaultRoute}

outputs:
  OS::stack_id:
    description: external network
    value: {get_resource: ExternalNetwork}
  subnet_cidr:
    value: {get_attr: [ExternalSubnet, cidr]}